
function get_current_status($node,$user,$pmb_bet_amount,$pmb_bet_outcome)
{
  dpm($node);
  $n=node_load($node, $vid = NULL, $reset = TRUE);
  dpm($n);
  $v=pmb_services_node_view($n, $view_mode="full content");;
  dpm($v);
 return $v;
}
function pmb_services_node_view($n, $view_mode="full content") {
  dpm($n);
  if ($node->type == 'question') {
    $outcomes = pmb_get_odds_for_node($node);
    $total = db_query('SELECT SUM(amount) summed FROM {pmb_bets} WHERE nid = :nid', array(':nid' => $node->nid))->fetchField();
    $delta = 0;
    while (isset($node->content['field_outcome'][$delta])) {
      $odds = empty($outcomes[$delta]['percents']) ? 0 : $outcomes[$delta]['percents'];
      $to_win = empty($outcomes[$delta]['to_win']) ? $total : round($outcomes[$delta]['to_win'], 2) -1;
      if (REQUEST_TIME > $node->field_closing_date['und'][0]['value'] && $node->field_question_status['und'][0]['value'] != PMB_QUESTION_CLOSED) {
        drupal_set_message(t('You may not bet on this question as the close date has passed. It will either be settled or re-opened for betting soon.'), 'status', FALSE);
        $new_markup = t('@outcome: @odds%.', array(
          '@outcome' => $node->content['field_outcome'][$delta]['#markup'],
          '@odds' => $odds,
        ));
        return $new_markup ;
      }
      else if (!empty($total)) {
        $new_markup = t('@outcome: current bets indicate @odds% likelihood. If you think this outcome is more likely, <a href="!place_bet">bet 1 druplicoin to win $@win druplicoins</a>', array(
          '@outcome' => $node->content['field_outcome'][$delta]['#markup'],
          '@odds' => $odds,
          '!place_bet' => url('node/' . $node->nid . '/bet/' . $delta),
          '@win' => $to_win,
        ));
        return $new_markup ;
      }
      else {
        $new_markup = t('@outcome. <a href="!place_bet">Be the first to bet on this outcome</a>', array(
          '@outcome' => $node->content['field_outcome'][$delta]['#markup'],
          '!place_bet' => url('node/' . $node->nid . '/bet/' . $delta),
        ));
        return $new_markup ;
      }
     
    }
  }
}
//Write supported function


